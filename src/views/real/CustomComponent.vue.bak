<template>
    <div 
        class="container"
        :style="{
            top: `${component.location.y}px`,
            left: `${component.location.x}px`,
            width: shouldWidth100Per(component) ? '100% ': component.size.w + 'px',
            height: `${component.size.h}px`
    }"
    >
        <span v-if="component.type === 1" :style="componentStyle">{{component.content}}</span>
        <img 
            v-if="component.type === 2" 
            class="image" 
            :style="componentStyle" 
            :src="component.url"
        />
        <a v-if="component.type === 3" :style="componentStyle" :href="component.appLink">{{component.content}}</a>
        <video v-if="component.type === 5" :style="componentStyle" :src="component.source" controls="controls" />
        <audio v-if="component.type === 6" :style="componentStyle" :src="component.source" controls="controls" />
    </div>
</template>

<script>
import { forEach } from "lodash";
export default {
  props: ["component", "pageJson", "componetsJson"],
  mounted() {},
  computed: {
    componentStyle() {
      return {
        ...this.component.style,
        position: 'relative',
        top: this.topOffset,
        left: this.leftOffset,
        width: this.shouldWidth100Per(this.component)
          ? "100%"
          : this.component.size.w + "px"
      };
    },
    // 由于图片需要计算高度，因此存在偏移量，计算该元素的偏移量
    topOffset() {
      let res = 0;
      forEach(this.componetsJson, item => {
        if (
          item.location.y < this.component.location.y &&
          this.shouldWidth100Per(item)
        ) {
          res = res + (item.size.h * (window.innerWidth / 375) - item.size.h);
        }
      });
      return res + 'px';
    },
    // 由于屏幕尺寸不一致，所以存在左侧偏移量
    leftOffset() {
        return this.component.location.x * (window.innerWidth / 375 - 1) + 'px'
    }
  },
  methods: {
    // 是否应该width: 100%
    shouldWidth100Per(item) {
      return item.type === 2 && item.size.w === this.pageJson.page.phoneWidth;
    }
  }
};
</script>

<style lang="less" scoped>
.container {
  position: absolute;
}
</style>

